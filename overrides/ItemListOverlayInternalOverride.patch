1c1
< package mezz.jei.gui;
---
> package code.elix_x.mods.fei.client.jeioverride;
3d2
< import javax.annotation.Nullable;
7d5
< import java.util.Arrays;
11a10,11
> import javax.annotation.Nullable;
> 
12a13,16
> 
> import code.elix_x.mods.fei.ForeverEnoughItemsBase;
> import code.elix_x.mods.fei.config.FEIConfiguration;
> import code.elix_x.mods.fei.net.FEIGiveItemStackPacket;
16d19
< import mezz.jei.api.gui.IDrawable;
19,20c22,25
< import mezz.jei.config.Constants;
< import mezz.jei.config.JEIModConfigGui;
---
> import mezz.jei.gui.GuiProperties;
> import mezz.jei.gui.ItemListOverlay;
> import mezz.jei.gui.ItemListOverlayInternal;
> import mezz.jei.gui.TooltipRenderer;
28,30d32
< import mezz.jei.input.IKeyable;
< import mezz.jei.input.IMouseHandler;
< import mezz.jei.input.IShowsRecipeFocuses;
32d33
< import mezz.jei.network.packets.PacketJei;
47,50d47
< import net.minecraft.util.ResourceLocation;
< import net.minecraft.util.text.TextFormatting;
< import net.minecraftforge.fml.client.config.HoverChecker;
< import org.lwjgl.input.Keyboard;
52c49
< public class ItemListOverlayInternal implements IShowsRecipeFocuses, IMouseHandler, IKeyable {
---
> public class ItemListOverlayInternalOverride extends ItemListOverlayInternal {
55d51
< 	private static final int searchHeight = 16;
69,72d64
< 	private final GuiButton configButton;
< 	private final IDrawable configButtonIcon;
< 	private final IDrawable configButtonCheatIcon;
< 	private final HoverChecker configButtonHoverChecker;
88c80,93
< 	public ItemListOverlayInternal(ItemListOverlay parent, IIngredientRegistry ingredientRegistry, GuiScreen guiScreen, GuiProperties guiProperties) {
---
> 	private boolean canGiveItems;
> 	private boolean canDeleteItems;
> 
> 	private int searchFieldWidth;
> 	private int searchFieldHeight;
> 
> 	public ItemListOverlayInternalOverride(ItemListOverlay parent, IIngredientRegistry ingredientRegistry, GuiScreen guiScreen, GuiProperties guiProperties, boolean canGiveItems, boolean canDeleteItems, int searchFieldWidth, int searchFieldHeight){
> 		super(parent, ingredientRegistry, guiScreen, guiProperties);
> 
> 		this.canGiveItems = canGiveItems;
> 		this.canDeleteItems = canDeleteItems;
> 		this.searchFieldWidth = searchFieldWidth;
> 		this.searchFieldHeight = searchFieldHeight;
> 
95c100
< 		if (!activeAdvancedGuiHandlers.isEmpty() && guiScreen instanceof GuiContainer) {
---
> 		if(!activeAdvancedGuiHandlers.isEmpty() && guiScreen instanceof GuiContainer){
98c103
< 		} else {
---
> 		} else{
102,103c107,108
< 		final int columns = getColumns(guiProperties);
< 		final int rows = getRows(guiProperties);
---
> 		final int columns = getColumns_(guiProperties);
> 		final int rows = getRows_(guiProperties);
120,121c125
< 		final int searchFieldY = guiProperties.getScreenHeight() - searchHeight - borderPadding - 2;
< 		final int searchFieldWidth;
---
> 		final int searchFieldY = guiProperties.getScreenHeight() - searchFieldHeight - borderPadding - 2;
123c127
< 		if (isSearchBarCentered(guiProperties)) {
---
> 		if(isSearchBarCentered(guiProperties)){
125,126c129
< 			searchFieldWidth = guiProperties.getGuiXSize() - buttonSize - 1;
< 		} else {
---
> 		} else{
128d130
< 			searchFieldWidth = rightEdge - leftEdge - buttonSize - 1;
132c134
< 		searchField = new GuiTextFieldFilter(0, fontRenderer, searchFieldX, searchFieldY, searchFieldWidth, searchHeight, parent.getItemFilter());
---
> 		searchField = new GuiTextFieldFilter(0, fontRenderer, searchFieldX, searchFieldY, searchFieldWidth, searchFieldHeight, parent.getItemFilter());
135,143d136
< 		int configButtonX = searchFieldX + searchFieldWidth + 1;
< 		int configButtonY = guiProperties.getScreenHeight() - buttonSize - borderPadding;
< 		configButton = new GuiButton(2, configButtonX, configButtonY, buttonSize, buttonSize, "");
< 		ResourceLocation configButtonIconLocation = new ResourceLocation(Constants.RESOURCE_DOMAIN, Constants.TEXTURE_RECIPE_BACKGROUND_PATH);
< 		GuiHelper guiHelper = Internal.getHelpers().getGuiHelper();
< 		configButtonIcon = guiHelper.createDrawable(configButtonIconLocation, 0, 166, 16, 16);
< 		configButtonCheatIcon = guiHelper.createDrawable(configButtonIconLocation, 16, 166, 16, 16);
< 		configButtonHoverChecker = new HoverChecker(configButton, 0);
< 
147,149c140,141
< 	private static boolean isSearchBarCentered(GuiProperties guiProperties) {
< 		return Config.isCenterSearchBarEnabled() &&
< 				guiProperties.getGuiTop() + guiProperties.getGuiYSize() + searchHeight < guiProperties.getScreenHeight();
---
> 	private static boolean isSearchBarCentered(GuiProperties guiProperties){
> 		return Config.isCenterSearchBarEnabled();
152c144
< 	private List<IAdvancedGuiHandler<?>> getActiveAdvancedGuiHandlers(GuiScreen guiScreen) {
---
> 	private List<IAdvancedGuiHandler<?>> getActiveAdvancedGuiHandlers(GuiScreen guiScreen){
154,155c146,147
< 		if (guiScreen instanceof GuiContainer) {
< 			for (IAdvancedGuiHandler<?> advancedGuiHandler : parent.getAdvancedGuiHandlers()) {
---
> 		if(guiScreen instanceof GuiContainer){
> 			for(IAdvancedGuiHandler<?> advancedGuiHandler : parent.getAdvancedGuiHandlers()){
157c149
< 				if (guiContainerClass.isInstance(guiScreen)) {
---
> 				if(guiContainerClass.isInstance(guiScreen)){
165c157
< 	private List<Rectangle> getGuiAreas(GuiContainer guiContainer) {
---
> 	private List<Rectangle> getGuiAreas(GuiContainer guiContainer){
167c159
< 		for (IAdvancedGuiHandler<?> advancedGuiHandler : activeAdvancedGuiHandlers) {
---
> 		for(IAdvancedGuiHandler<?> advancedGuiHandler : activeAdvancedGuiHandlers){
169c161
< 			if (guiExtraAreas != null) {
---
> 			if(guiExtraAreas != null){
177c169
< 	private <T extends GuiContainer> List<Rectangle> getGuiAreas(GuiContainer gui, IAdvancedGuiHandler<T> advancedGuiHandler) {
---
> 	private <T extends GuiContainer> List<Rectangle> getGuiAreas(GuiContainer gui, IAdvancedGuiHandler<T> advancedGuiHandler){
179c171
< 		if (guiClass.isInstance(gui)) {
---
> 		if(guiClass.isInstance(gui)){
186,187c178,179
< 	public boolean hasScreenChanged(GuiScreen guiScreen) {
< 		if (!Config.isOverlayEnabled()) {
---
> 	public boolean hasScreenChanged(GuiScreen guiScreen){
> 		if(!Config.isOverlayEnabled()){
191c183
< 		if (guiProperties == null) {
---
> 		if(guiProperties == null){
194c186
< 		if (!this.guiProperties.equals(guiProperties)) {
---
> 		if(!this.guiProperties.equals(guiProperties)){
196c188
< 		} else if (!activeAdvancedGuiHandlers.isEmpty() && guiScreen instanceof GuiContainer) {
---
> 		} else if(!activeAdvancedGuiHandlers.isEmpty() && guiScreen instanceof GuiContainer){
199c191
< 			if (!Java6Helper.equals(this.guiAreas, guiAreas)) {
---
> 			if(!Java6Helper.equals(this.guiAreas, guiAreas)){
207c199
< 	private static void createItemButtons(GuiIngredientFastList guiItemStacks, @Nullable List<Rectangle> guiAreas, final int xStart, final int yStart, final int columnCount, final int rowCount) {
---
> 	private static void createItemButtons(GuiIngredientFastList guiItemStacks, @Nullable List<Rectangle> guiAreas, final int xStart, final int yStart, final int columnCount, final int rowCount){
210c202
< 		for (int row = 0; row < rowCount; row++) {
---
> 		for(int row = 0; row < rowCount; row++){
212c204
< 			for (int column = 0; column < columnCount; column++) {
---
> 			for(int column = 0; column < columnCount; column++){
215c207
< 				if (guiAreas != null) {
---
> 				if(guiAreas != null){
217c209
< 					if (intersects(guiAreas, stackArea)) {
---
> 					if(intersects(guiAreas, stackArea)){
226,228c218,220
< 	private static boolean intersects(List<Rectangle> areas, Rectangle comparisonArea) {
< 		for (Rectangle area : areas) {
< 			if (area.intersects(comparisonArea)) {
---
> 	private static boolean intersects(List<Rectangle> areas, Rectangle comparisonArea){
> 		for(Rectangle area : areas){
> 			if(area.intersects(comparisonArea)){
235c227
< 	private void updateLayout() {
---
> 	private void updateLayout(){
249c241
< 	private void nextPage() {
---
> 	private void nextPage(){
251c243
< 		if (itemsCount == 0) {
---
> 		if(itemsCount == 0){
257c249
< 		if (firstItemIndex >= itemsCount) {
---
> 		if(firstItemIndex >= itemsCount){
263c255
< 	private void previousPage() {
---
> 	private void previousPage(){
265c257
< 		if (itemsPerPage == 0) {
---
> 		if(itemsPerPage == 0){
272c264
< 		if (pageNum == 0) {
---
> 		if(pageNum == 0){
274c266
< 		} else {
---
> 		} else{
279c271
< 		if (firstItemIndex > 0 && firstItemIndex == itemsCount) {
---
> 		if(firstItemIndex > 0 && firstItemIndex == itemsCount){
286c278
< 	public void drawScreen(Minecraft minecraft, int mouseX, int mouseY) {
---
> 	public void drawScreen(Minecraft minecraft, int mouseX, int mouseY){
294,297d285
< 		configButton.drawButton(minecraft, mouseX, mouseY);
< 
< 		IDrawable icon = Config.isCheatItemsEnabled() ? configButtonCheatIcon : configButtonIcon;
< 		icon.draw(minecraft, configButton.xPosition + 2, configButton.yPosition + 2);
301c289
< 		if (shouldShowDeleteItemTooltip(minecraft)) {
---
> 		if(shouldShowDeleteItemTooltip(minecraft)){
303c291
< 		} else {
---
> 		} else{
309c297
< 		if (!highlightedStacks.isEmpty()) {
---
> 		if(!highlightedStacks.isEmpty()){
311c299
< 			for (GuiIngredientFast guiItemStack : guiIngredientList.getAllGuiIngredients()) {
---
> 			for(GuiIngredientFast guiItemStack : guiIngredientList.getAllGuiIngredients()){
313,314c301,302
< 				if (ingredient instanceof ItemStack) {
< 					if (helper.containsStack(highlightedStacks, (ItemStack) ingredient) != null) {
---
> 				if(ingredient instanceof ItemStack){
> 					if(helper.containsStack(highlightedStacks, (ItemStack) ingredient) != null){
321c309
< 		if (hovered != null) {
---
> 		if(hovered != null){
328,329c316,317
< 	private boolean shouldShowDeleteItemTooltip(Minecraft minecraft) {
< 		if (Config.isDeleteItemsInCheatModeActive()) {
---
> 	private boolean shouldShowDeleteItemTooltip(Minecraft minecraft){
> 		if(canDeleteItems && FEIConfiguration.canDeleteItems(Minecraft.getMinecraft().thePlayer)){
331c319
< 			if (player.inventory.getItemStack() != null) {
---
> 			if(player.inventory.getItemStack() != null){
338c326
< 	public void drawTooltips(Minecraft minecraft, int mouseX, int mouseY) {
---
> 	public void drawTooltips(Minecraft minecraft, int mouseX, int mouseY){
340c328
< 		if (mouseOver && shouldShowDeleteItemTooltip(minecraft)) {
---
> 		if(mouseOver && shouldShowDeleteItemTooltip(minecraft)){
345c333
< 		if (hovered != null) {
---
> 		if(hovered != null){
348,360d335
< 
< 		if (configButtonHoverChecker.checkHover(mouseX, mouseY)) {
< 			String configString = Translator.translateToLocal("jei.tooltip.config");
< 			if (Config.isCheatItemsEnabled()) {
< 				List<String> tooltip = Arrays.asList(
< 						configString,
< 						TextFormatting.RED + Translator.translateToLocal("jei.tooltip.cheat.mode")
< 				);
< 				TooltipRenderer.drawHoveringText(minecraft, tooltip, mouseX, mouseY);
< 			} else {
< 				TooltipRenderer.drawHoveringText(minecraft, configString, mouseX, mouseY);
< 			}
< 		}
363c338
< 	public void handleTick() {
---
> 	public void handleTick(){
368,371c343,345
< 	public boolean isMouseOver(int mouseX, int mouseY) {
< 		if (mouseX < guiProperties.getGuiLeft() + guiProperties.getGuiXSize()) {
< 			return isSearchBarCentered(guiProperties) &&
< 					(searchField.isMouseOver(mouseX, mouseY) || configButtonHoverChecker.checkHover(mouseX, mouseY));
---
> 	public boolean isMouseOver(int mouseX, int mouseY){
> 		if(mouseX < guiProperties.getGuiLeft() + guiProperties.getGuiXSize()){
> 			return isSearchBarCentered(guiProperties) && searchField.isMouseOver(mouseX, mouseY);
374,375c348,349
< 		for (Rectangle guiArea : guiAreas) {
< 			if (guiArea.contains(mouseX, mouseY)) {
---
> 		for(Rectangle guiArea : guiAreas){
> 			if(guiArea.contains(mouseX, mouseY)){
385,386c359,360
< 	public IClickedIngredient<?> getIngredientUnderMouse(int mouseX, int mouseY) {
< 		if (!isMouseOver(mouseX, mouseY)) {
---
> 	public IClickedIngredient<?> getIngredientUnderMouse(int mouseX, int mouseY){
> 		if(!isMouseOver(mouseX, mouseY)){
391c365
< 		if (clicked != null) {
---
> 		if(clicked != null){
399c373
< 	public boolean canSetFocusWithMouse() {
---
> 	public boolean canSetFocusWithMouse(){
404,405c378,379
< 	public boolean handleMouseClicked(int mouseX, int mouseY, int mouseButton) {
< 		if (!isMouseOver(mouseX, mouseY)) {
---
> 	public boolean handleMouseClicked(int mouseX, int mouseY, int mouseButton){
> 		if(!isMouseOver(mouseX, mouseY)){
410,417c384,404
< 		if (Config.isDeleteItemsInCheatModeActive()) {
< 			Minecraft minecraft = Minecraft.getMinecraft();
< 			EntityPlayerSP player = minecraft.thePlayer;
< 			ItemStack itemStack = player.inventory.getItemStack();
< 			if (itemStack != null) {
< 				player.inventory.setItemStack(null);
< 				PacketJei packet = new PacketDeletePlayerItem(itemStack);
< 				JustEnoughItems.getProxy().sendPacketToServer(packet);
---
> 		if(Minecraft.getMinecraft().thePlayer.inventory.getItemStack() == null){
> 			ClickedIngredient<?> f = guiIngredientList.getIngredientUnderMouse(mouseX, mouseY);
> 			if(f != null && f.getValue() instanceof ItemStack && canGiveItems && FEIConfiguration.canGiveItems(Minecraft.getMinecraft().thePlayer)){
> 				ItemStack itemstack = ((ItemStack) f.getValue()).copy();
> 				if(mouseButton == 0) itemstack.stackSize = itemstack.getMaxStackSize();
> 				else itemstack.stackSize = 1;
> 				ForeverEnoughItemsBase.net.sendToServer(new FEIGiveItemStackPacket(itemstack));
> 				return true;
> 			}
> 		} else{
> 			if(canDeleteItems && FEIConfiguration.canDeleteItems(Minecraft.getMinecraft().thePlayer)){
> 				Minecraft minecraft = Minecraft.getMinecraft();
> 				EntityPlayerSP player = minecraft.thePlayer;
> 				ItemStack itemStack = player.inventory.getItemStack();
> 				if(itemStack != null){
> 					player.inventory.setItemStack(null);
> 					PacketDeletePlayerItem packet = new PacketDeletePlayerItem(itemStack);
> 					JustEnoughItems.getProxy().sendPacketToServer(packet);
> 					return true;
> 				}
> 			} else if(Minecraft.getMinecraft().thePlayer.isCreative()){
423c410
< 		if (buttonClicked) {
---
> 		if(buttonClicked){
432,433c419,420
< 	public boolean handleMouseScrolled(int mouseX, int mouseY, int scrollDelta) {
< 		if (!isMouseOver(mouseX, mouseY)) {
---
> 	public boolean handleMouseScrolled(int mouseX, int mouseY, int scrollDelta){
> 		if(!isMouseOver(mouseX, mouseY)){
436c423
< 		if (scrollDelta < 0) {
---
> 		if(scrollDelta < 0){
439c426
< 		} else if (scrollDelta > 0) {
---
> 		} else if(scrollDelta > 0){
446c433
< 	private boolean handleMouseClickedButtons(int mouseX, int mouseY) {
---
> 	private boolean handleMouseClickedButtons(int mouseX, int mouseY){
448c435
< 		if (nextButton.mousePressed(minecraft, mouseX, mouseY)) {
---
> 		if(nextButton.mousePressed(minecraft, mouseX, mouseY)){
452c439
< 		} else if (backButton.mousePressed(minecraft, mouseX, mouseY)) {
---
> 		} else if(backButton.mousePressed(minecraft, mouseX, mouseY)){
456,467d442
< 		} else if (configButton.mousePressed(minecraft, mouseX, mouseY)) {
< 			configButton.playPressSound(minecraft.getSoundHandler());
< 			if (Keyboard.getEventKeyState() && (Keyboard.getEventKey() == Keyboard.KEY_LCONTROL || Keyboard.getEventKey() == Keyboard.KEY_RCONTROL)) {
< 				Config.toggleCheatItemsEnabled();
< 			} else {
< 				if (minecraft.currentScreen != null) {
< 					parent.close();
< 					GuiScreen configScreen = new JEIModConfigGui(minecraft.currentScreen);
< 					minecraft.displayGuiScreen(configScreen);
< 				}
< 			}
< 			return true;
472c447
< 	private boolean handleMouseClickedSearch(int mouseX, int mouseY, int mouseButton) {
---
> 	private boolean handleMouseClickedSearch(int mouseX, int mouseY, int mouseButton){
475c450
< 		if (searchClicked && searchField.handleMouseClicked(mouseX, mouseY, mouseButton)) {
---
> 		if(searchClicked && searchField.handleMouseClicked(mouseX, mouseY, mouseButton)){
482c457
< 	public boolean hasKeyboardFocus() {
---
> 	public boolean hasKeyboardFocus(){
487,488c462,463
< 	public void setKeyboardFocus(boolean keyboardFocus) {
< 		searchField.setFocused(keyboardFocus);
---
> 	public void setKeyboardFocus(boolean keyboardFocus){
> 		if(searchField != null) searchField.setFocused(keyboardFocus);
492,493c467,468
< 	public boolean onKeyPressed(char typedChar, int keyCode) {
< 		if (hasKeyboardFocus()) {
---
> 	public boolean onKeyPressed(char typedChar, int keyCode){
> 		if(hasKeyboardFocus()){
495c470
< 			if (changed) {
---
> 			if(changed){
504c479
< 	private static int getItemButtonXSpace(GuiProperties guiProperties) {
---
> 	private int getItemButtonXSpace(GuiProperties guiProperties){
508,512c483,484
< 	private static int getItemButtonYSpace(GuiProperties guiProperties) {
< 		if (isSearchBarCentered(guiProperties)) {
< 			return guiProperties.getScreenHeight() - (buttonSize + (3 * borderPadding));
< 		}
< 		return guiProperties.getScreenHeight() - (buttonSize + searchHeight + 2 + (4 * borderPadding));
---
> 	private int getItemButtonYSpace(GuiProperties guiProperties){
> 		return guiProperties.getScreenHeight() - (buttonSize + (isSearchBarCentered(guiProperties) ? 0 : (searchFieldHeight + 2)) + (4 * borderPadding));
515c487
< 	public static int getColumns(GuiProperties guiProperties) {
---
> 	public int getColumns_(GuiProperties guiProperties){
519c491
< 	public static int getRows(GuiProperties guiProperties) {
---
> 	public int getRows_(GuiProperties guiProperties){
523c495
< 	private int getPageCount() {
---
> 	private int getPageCount(){
526c498
< 		if (stacksPerPage == 0) {
---
> 		if(stacksPerPage == 0){
534c506
< 	private int getPageNum() {
---
> 	private int getPageNum(){
536c508
< 		if (stacksPerPage == 0) {
---
> 		if(stacksPerPage == 0){
542c514
< 	public void close() {
---
> 	public void close(){
548,549c520,521
< 	public ItemStack getStackUnderMouse() {
< 		if (hovered != null) {
---
> 	public ItemStack getStackUnderMouse(){
> 		if(hovered != null){
551c523
< 			if (ingredient instanceof ItemStack) {
---
> 			if(ingredient instanceof ItemStack){
558c530
< 	public void setFilterText(String filterText) {
---
> 	public void setFilterText(String filterText){
564c536
< 	public ImmutableList<ItemStack> getVisibleStacks() {
---
> 	public ImmutableList<ItemStack> getVisibleStacks(){
566c538
< 		for (GuiIngredientFast guiItemStack : guiIngredientList.getAllGuiIngredients()) {
---
> 		for(GuiIngredientFast guiItemStack : guiIngredientList.getAllGuiIngredients()){
568c540
< 			if (ingredient instanceof ItemStack) {
---
> 			if(ingredient instanceof ItemStack){
